<<<<<<< HEAD
name: $(Date:yyyyMMdd).$(Rev:.r)
variables:
  cov.authkey: '/home/moralita/auth-key.txt'
  cov.bin: '/opt/Coverity/cov-analysis/bin'
  cov.host: '192.168.56.101'
  cov.idir: '$(Build.SourcesDirectory)/idir'
  cov.stream: 'hello-java'

jobs:
- job: Coverity
  pool:
    name: private-linux
    clean: all
  steps:
  - task: CmdLine@2
    displayName: cov-build
    inputs:
      script: '$(cov.bin)/cov-build --dir $(cov.idir) --fs-capture-search $(Build.SourcesDirectory) mvn clean package -DskipTests'
  - task: CmdLine@2
    displayName: cov-import-scm
    inputs:
      script: '$(cov.bin)/cov-import-scm --dir $(cov.idir) --scm git'
  - task: CmdLine@2
    displayName: cov-analyze
    inputs:
      script: '$(cov.bin)/cov-analyze --dir $(cov.idir) --strip-path $(Build.SourcesDirectory) --all --enable-callgraph-metrics --webapp-security'
  - task: CmdLine@2
    displayName: cov-commit-defects
    inputs:
      script: '$(cov.bin)/cov-commit-defects --dir $(cov.idir) --host $(cov.host) --auth-key-file $(cov.authkey) --stream $(cov.stream) --description $(Build.BuildURI) --target Windows_x86_64 --version $(Build.SourceVersion)'
=======
variables:
  cov.bin: 'c:/tools/coverity/analysis/2020.06/bin'
  cov.url: 'https://coverity.chuckaude.com:8443/'
  cov.authkey: 'c:/tools/coverity/analysis/commit-authkey'
  cov.stream: 'hello-java'
  cov.idir: '$(Build.SourcesDirectory)/idir'
  cov.bldcmd: 'mvn -B clean package -DskipTests'
  cov.checkers: '--all --webapp-security'

jobs:
- job: Coverity
  pool:
    name: private-windows
  workspace:
    clean: all
  steps:
  - task: CmdLine@2
    displayName: Coverity
    inputs:
      script: |
        $(cov.bin)/cov-build --dir $(cov.idir) --fs-capture-search $(Build.SourcesDirectory) $(cov.bldcmd)
        $(cov.bin)/cov-analyze --dir $(cov.idir) --ticker-mode none --strip-path $(Build.SourcesDirectory) $(cov.checkers)
        $(cov.bin)/cov-commit-defects --dir $(cov.idir) --ticker-mode none --url $(cov.url) --on-new-cert trust --auth-key-file $(cov.authkey) --stream $(cov.stream) --description $(Build.BuildURI) --version $(Build.SourceVersion)
>>>>>>> upstream/master
